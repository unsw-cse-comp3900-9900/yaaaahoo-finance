Week 1Group forming, I am planning on doing the Finance project.Week 2Groups were formed, we began looking into technologies to use for the project. We agreed on the use of Tensorflow, Firebase and React for the technology stack at first. The Jira boards and confluences were setup. The team has asked me to make a PoC for the project and given that I was relatively free I decided to try do as much as I can for the PoC and make it ready for the proposal.For the PoC I wanted to aim to setup a basic React application that successfully implements the authentication and profile management features, and hopefully even custom profiles. So far I have been able to make a React application hook into a Firebase deployment with no issues and user creation is working.Week 3This week I got really sick and wasn’t able to work on much. I haven’t been able to do what I hoped regarding the PoC which was at least making custom profiles possible.Week 4I ended up being unable to do anything again due to being sick. I am going to attempt to makeup for it over the next few weeks the sprints start and before my other courses get too busy.Week 5My first-time meeting with the team since I started feeling relatively better again, Rachel thought that we had gotten almost all of it done already and there wasn’t much left to do. I suggested that perhaps we could add compatibility for other markets and maybe even CryptocurrenciesWeek 6I have been assigned a few tickets and am attempting to work through them. Since the switch to online, things have gotten a bit difficult. I am currently looking through the existing codebase and trying to get a feel for the codebase since Mehri has decided to rewrite the entire codebase. Hoping to start getting things done next week. Week 7I wasn’t able to get previous weeks tickets done because of some personal issues. I solved an issue with the React application not playing well with tensorflow.js. It seemed there were existing issues that haven’t been solved by either Facebook or Google when it comes to compatibility. I suggested that we could perhaps run the model on a separate python server and just not use tensorflow.js. I was told to make this happen. Week 8I implemented the python server that would host the model. I decided to make a simple Flask server to server basic JSON responses when asked to do prediction or sentiment analysis on a particular stock. The code for forward propagation is the same.Week 9I implemented the 404 page and also tried implementing a basic backup feature for the Flask server in case the data sources for our historical pricing data ever go down. I tried doing this with a TinyDB database that caches results as the analysises are being made. Week 10
I made the powerpoint and an updated system flow diagram as well as a data flow diagram. The powerpoint features details on various aspects of the system as well as technologies that were used to create the system. 